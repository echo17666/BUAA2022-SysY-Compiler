declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local global i32 5
define dso_local i32 @func() {
    call void @putch(i32 120)
    call void @putch(i32 120)
    call void @putch(i32 120)
    call void @putch(i32 120)
    call void @putch(i32 120)
    call void @putch(i32 120)
    call void @putch(i32 120)
    call void @putch(i32 10)
    ret i32 1
}
define dso_local i32 @func2() {
    call void @putch(i32 97)
    call void @putch(i32 97)
    call void @putch(i32 97)
    call void @putch(i32 97)
    call void @putch(i32 10)
    ret i32 1
}

define dso_local i32 @main() {
    %v1 = alloca i32
    %v2 = alloca i32
    store i32 1, i32* %v2
    %v3 = alloca i32
    %v4 = alloca i32
    %v5 = alloca i32
    %v6 = load i32, i32* %v1
    store i32 4, i32* %v1
    %v7 = load i32, i32* %v3
    %v8 = sub i32 0, 2
    store i32 %v8, i32* %v3
    %v9 = load i32, i32* %v4
    store i32 2, i32* %v4
    br label %v10

v10:
    %v16 = alloca i32
    %v17 = load i32, i32* @a
    %v18 = load i32, i32* %v1
    %v19 = sub i32 %v17, %v18
    %v20 = icmp eq i32 %v19, 1
    %v21 = sext i1 %v20 to i32
    %v22 = icmp ne i32 0, %v21
    br i1 %v22, label %v23, label %v14

v23:
    %v24 = load i32, i32* %v1
    %v25 = alloca i32
    %v26 = load i32, i32* @a
    %v27 = sub i32 %v24, %v26
    %v28 = sub i32 0, 1
    %v29 = icmp eq i32 %v27, %v28
    %v30 = sext i1 %v29 to i32
    %v31 = icmp ne i32 0, %v30
    br i1 %v31, label %v32, label %v14

v32:
    %v33 = alloca i32
    %v34 = load i32, i32* @a
    %v35 = load i32, i32* %v1
    %v36 = sub i32 %v34, %v35
    %v37 = icmp eq i32 %v36, 0
    %v38 = sext i1 %v37 to i32
    %v39 = icmp ne i32 0, %v38
    br i1 %v39, label %v11, label %v14

v14:
    %v40 = alloca i32
    %v41 = load i32, i32* @a
    %v42 = load i32, i32* %v1
    %v43 = add i32 %v41, %v42
    %v44 = icmp eq i32 %v43, 9
    %v45 = sext i1 %v44 to i32
    %v46 = icmp ne i32 0, %v45
    br i1 %v46, label %v11, label %v47

v47:
    %v48 = call i32 @func()
    %v49 = icmp ne i32 0, %v48
    br i1 %v49, label %v11, label %v12

v11:
    %v51 = load i32, i32* %v4
    %v52 = load i32, i32* %v4
    %v53 = add i32 %v52, 3
    store i32 %v53, i32* %v4
    br label %v13

v12:
    br label %v54

v54:
    %v59 = load i32, i32* %v2
    %v60 = load i32, i32* %v3
    %v61 = add i32 %v59, %v60
    %v62 = sub i32 0, 1
    %v63 = icmp ne i32 %v61, %v62
    %v64 = sext i1 %v63 to i32
    %v65 = icmp ne i32 0, %v64
    br i1 %v65, label %v66, label %v57

v66:
    %v67 = call i32 @func()
    %v68 = icmp ne i32 0, %v67
    br i1 %v68, label %v55, label %v57

v57:
    %v70 = load i32, i32* %v4
    %v71 = add i32 %v70, 1
    %v72 = srem i32 %v71, 2
    %v73 = icmp eq i32 %v72, 1
    %v74 = sext i1 %v73 to i32
    %v75 = icmp ne i32 0, %v74
    br i1 %v75, label %v76, label %v56

v76:
    %v77 = call i32 @func2()
    %v78 = icmp ne i32 0, %v77
    br i1 %v78, label %v55, label %v56

v55:
    %v80 = load i32, i32* %v4
    %v81 = load i32, i32* %v4
    %v82 = add i32 %v81, 4
    store i32 %v82, i32* %v4
    br label %v56

v56:
    br label %v13

v13:
    %v83 = load i32, i32* %v4
    call void @putint(i32 %v83)
    call void @putch(i32 10)
    ret i32 0
}
